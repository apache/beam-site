<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache Beam (incubating)</title>
    <description>Apache Beam is an open source, unified model and set of language-specific SDKs for defining and executing data processing workflows, and also data ingestion and integration flows, supporting Enterprise Integration Patterns (EIPs) and Domain Specific Languages (DSLs). Dataflow pipelines simplify the mechanics of large-scale batch and streaming data processing and can run on a number of runtimes like Apache Flink, Apache Spark, and Google Cloud Dataflow (a cloud service). Beam also brings DSL in different languages, allowing users to easily implement their data integration processes.
</description>
    <link>http://beam.incubator.apache.org/</link>
    <atom:link href="http://beam.incubator.apache.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 24 May 2016 15:42:20 +0200</pubDate>
    <lastBuildDate>Tue, 24 May 2016 15:42:20 +0200</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Where&#39;s my PCollection.map()?</title>
        <description>&lt;p&gt;Have you ever wondered why Beam has PTransforms for everything instead of having methods on PCollection? Take a look at the history that led to this (and other) design decisions.
&lt;!--more--&gt;
Though Beam is relatively new, its design draws heavily on many years of experience with real-world pipelines. One of the primary inspirations is &lt;a href=&quot;http://research.google.com/pubs/pub35650.html&quot;&gt;FlumeJava&lt;/a&gt;, which is Google’s internal successor to MapReduce first introduced in 2009.&lt;/p&gt;

&lt;p&gt;The original FlumeJava API has methods like &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;parallelDo&lt;/code&gt; on the PCollections. Though slightly more succinct, this approach has many disadvantages to extensibility. Every new user to FlumeJava wanted to add transforms, and adding them as methods to PCollection simply doesn’t scale well. In contrast, a PCollection in Beam has a single &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt; method which takes any PTransform as an argument.&lt;/p&gt;

&lt;p&gt;Have you ever wondered why Beam has PTransforms for everything instead of having methods on PCollection? Take a look at the history that led to this (and other) design decisions.&lt;/p&gt;

&lt;table class=&quot;table&quot;&gt;
  &lt;tr&gt;
    &lt;th&gt;FlumeJava&lt;/th&gt;
    &lt;th&gt;Beam&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;pre&gt;
PCollection&amp;lt;T&amp;gt; input = …
PCollection&amp;lt;O&amp;gt; output = input.count()
                             .parallelDo(...);
    &lt;/pre&gt;&lt;/td&gt;
    &lt;td&gt;&lt;pre&gt;
PCollection&amp;lt;T&amp;gt; input = …
PCollection&amp;lt;O&amp;gt; output = input.apply(Count.perElement())
                             .apply(ParDo.of(...));
    &lt;/pre&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;This is a more scalable approach for several reasons.&lt;/p&gt;

&lt;h2 id=&quot;where-to-draw-the-line&quot;&gt;Where to draw the line?&lt;/h2&gt;
&lt;p&gt;Adding methods to PCollection forces a line to be drawn between operations that are “useful” enough to merit this special treatment and those that are not. It is easy to make the case for flat map, group by key, and combine per key. But what about filter? Count? Approximate count? Approximate quantiles? Most frequent? WriteToMyFavoriteSource? Going too far down this path leads to a single enormous class that contains nearly everything one could want to do. (FlumeJava’s PCollection class is over 5000 lines long with around 70 distinct operations, and it could have been &lt;em&gt;much&lt;/em&gt; larger had we accepted every proposal.) Furthermore, since Java doesn’t allow adding methods to a class, there is a sharp syntactic divide between those operations that are added to PCollection and those that aren’t. A traditional way to share code is with a library of functions, but functions (in traditional languages like Java at least) are written prefix-style, which doesn’t mix well with the fluent builder style (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;input.operation1().operation2().operation3()&lt;/code&gt; vs. &lt;code class=&quot;highlighter-rouge&quot;&gt;operation3(operation1(input).operation2())&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Instead in Beam we’ve chosen a style that places all transforms–whether they be primitive operations, composite operations bundled in the SDK, or part of an external library–on equal footing. This also facilitates alternative implementations (which may even take different options) that are easily interchangeable.&lt;/p&gt;

&lt;table class=&quot;table&quot;&gt;
  &lt;tr&gt;
    &lt;th&gt;FlumeJava&lt;/th&gt;
    &lt;th&gt;Beam&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;pre&gt;
PCollection&amp;lt;O&amp;gt; output =
    ExternalLibrary.doStuff(
        MyLibrary.transform(input, myArgs)
            .parallelDo(...),
        externalLibArgs);
    &lt;/pre&gt;&lt;/td&gt;
    &lt;td&gt;&lt;pre&gt;
PCollection&amp;lt;O&amp;gt; output = input
    .apply(MyLibrary.transform(myArgs))
    .apply(ParDo.of(...))
    .apply(ExternalLibrary.doStuff(externalLibArgs));
    &amp;nbsp;
    &lt;/pre&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&quot;configurability&quot;&gt;Configurability&lt;/h2&gt;
&lt;p&gt;It makes for a fluent style to let values (PCollections) be the objects passed around and manipulated (i.e. the handles to the deferred execution graph), but it is the operations themselves that need to be composable, configurable, and extendable. Using PCollection methods for the operations doesn’t scale well here, especially in a language without default or keyword arguments. For example, a ParDo operation can have any number of side inputs and side outputs, or a write operation may have configurations dealing with encoding and compression. One option is to separate these out into multiple overloads or even methods, but that exacerbates the problems above. (FlumeJava evolved over a dozen overloads of the &lt;code class=&quot;highlighter-rouge&quot;&gt;parallelDo&lt;/code&gt; method!) Another option is to pass each method a configuration object that can be built up using more fluent idioms like the builder pattern, but at that point one might as well make the configuration object the operation itself, which is what Beam does.&lt;/p&gt;

&lt;h2 id=&quot;type-safety&quot;&gt;Type Safety&lt;/h2&gt;
&lt;p&gt;Many operations can only be applied to collections whose elements are of a specific type. For example, the GroupByKey operation should only be applied to &lt;code class=&quot;highlighter-rouge&quot;&gt;PCollection&amp;lt;KV&amp;lt;K, V&amp;gt;&amp;gt;&lt;/code&gt;s. In Java at least, it’s not possible to restrict methods based on the element type parameter alone. In FlumeJava, this led us to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;PTable&amp;lt;K, V&amp;gt;&lt;/code&gt; subclassing &lt;code class=&quot;highlighter-rouge&quot;&gt;PCollection&amp;lt;KV&amp;lt;K, V&amp;gt;&amp;gt;&lt;/code&gt; to contain all the operations specific to PCollections of key-value pairs. This leads to the same question of which element types are special enough to merit being captured by PCollection subclasses. It is not very extensible for third parties and often requires manual downcasts/conversions (which can’t be safely chained in Java) and special operations that produce these PCollection specializations.&lt;/p&gt;

&lt;p&gt;This is particularly inconvenient for transforms that produce outputs whose element types are the same as (or related to) their input’s element types, requiring extra support to generate the right subclasses (e.g. a filter on a PTable should produce another PTable rather than just a raw PCollection of key-value pairs).&lt;/p&gt;

&lt;p&gt;Using PTransforms allows us to sidestep this entire issue. We can place arbitrary constraints on the context in which a transform may be used based on the type of its inputs; for instance GroupByKey is statically typed to only apply to a &lt;code class=&quot;highlighter-rouge&quot;&gt;PCollection&amp;lt;KV&amp;lt;K, V&amp;gt;&amp;gt;&lt;/code&gt;. The way this happens is generalizable to arbitrary shapes, without needing to introduce specialized types like PTable.&lt;/p&gt;

&lt;h2 id=&quot;reusability-and-structure&quot;&gt;Reusability and Structure&lt;/h2&gt;
&lt;p&gt;Though PTransforms are generally constructed at the site at which they’re used, by pulling them out as separate objects one is able to store them and pass them around.&lt;/p&gt;

&lt;p&gt;As pipelines grow and evolve, it is useful to structure your pipeline into modular, often reusable components, and PTransforms allow one to do this nicely in a data-processing pipeline. In addition, modular PTransforms also expose the logical structure of your code to the system (e.g. for monitoring). Of the three different representations of the WordCount pipeline below, only the structured view captures the high-level intent of the pipeline. Letting even the simple operations be PTransforms means there’s less of an abrupt edge to packaging things up into composite operations.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-block&quot; src=&quot;/images/blog/simple-wordcount-pipeline.png&quot; alt=&quot;Three different visualizations of a simple WordCount pipeline&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;text-center&quot;&gt;
&lt;i&gt;Three different visualizations of a simple WordCount pipeline which computes the number of occurrences of every word in a set of text files. The flag view gives the full DAG of all operations performed. The execution view groups operations according to how they&#39;re executed, e.g. after performing runner-specific optimizations like function composition. The structured view nests operations according to their grouping in PTransforms.&lt;/i&gt;
&lt;/div&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Although it’s tempting to add methods to PCollections, such an approach is not scalable, extensible, or sufficiently expressive. Putting a single apply method on PCollection and all the logic into the operation itself lets us have the best of both worlds, and avoids hard cliffs of complexity by having a single consistent style across simple and complex pipelines, and between predefined and user-defined operations.&lt;/p&gt;
</description>
        <pubDate>Fri, 20 May 2016 20:00:00 +0200</pubDate>
        <link>http://beam.incubator.apache.org/blog/2016/05/20/where-is-my-pcollection-dot-map.html</link>
        <guid isPermaLink="true">http://beam.incubator.apache.org/blog/2016/05/20/where-is-my-pcollection-dot-map.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Dynamic work rebalancing for Beam</title>
        <description>&lt;p&gt;This morning, Eugene and Malo from the Google Cloud Dataflow team posted &lt;a href=&quot;https://cloud.google.com/blog/big-data/2016/05/no-shard-left-behind-dynamic-work-rebalancing-in-google-cloud-dataflow&quot;&gt;&lt;em&gt;No shard left behind: dynamic work rebalancing in Google Cloud Dataflow&lt;/em&gt;&lt;/a&gt;. This article discusses Cloud Dataflow’s solution to the well-known straggler problem.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In a large batch processing job with many tasks executing in parallel, some of the tasks – the stragglers – can take a much longer time to complete than others, perhaps due to imperfect splitting of the work into parallel chunks when issuing the job. Typically, waiting for stragglers means that the overall job completes later than it should, and may also reserve too many machines that may be underutilized at the end. Cloud Dataflow’s dynamic work rebalancing can mitigate stragglers in most cases.&lt;/p&gt;

&lt;p&gt;What I’d like to highlight for the Apache Beam (incubating) community is that Cloud Dataflow’s dynamic work rebalancing is implemented using &lt;em&gt;runner-specific&lt;/em&gt; control logic on top of Beam’s &lt;em&gt;runner-independent&lt;/em&gt; &lt;a href=&quot;https://github.com/apache/incubator-beam/blob/9fa97fb2491bc784df53fb0f044409dbbc2af3d7/sdks/java/core/src/main/java/org/apache/beam/sdk/io/BoundedSource.java&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BoundedSource API&lt;/code&gt;&lt;/a&gt;. Specifically, to steal work from a straggler, a runner need only call the reader’s &lt;a href=&quot;https://github.com/apache/incubator-beam/blob/3edae9b8b4d7afefb5c803c19bb0a1c21ebba89d/sdks/java/core/src/main/java/org/apache/beam/sdk/io/BoundedSource.java#L266&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;splitAtFraction method&lt;/code&gt;&lt;/a&gt;. This will generate a new source containing leftover work, and then the runner can pass that source off to another idle worker. As Beam matures, I hope that other runners are interested in figuring out whether these APIs can help them improve performance, implementing dynamic work rebalancing, and collaborating on API changes that will help solve other pain points.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 May 2016 20:00:00 +0200</pubDate>
        <link>http://beam.incubator.apache.org/blog/2016/05/18/splitAtFraction-method.html</link>
        <guid isPermaLink="true">http://beam.incubator.apache.org/blog/2016/05/18/splitAtFraction-method.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Apache Beam Presentation Materials</title>
        <description>&lt;p&gt;Are you interested in giving a presentation about Apache Beam? Perhaps you want to talk about Apache Beam at a local Meetup or a convention. Excellent!  The Apache Beam community is excited to expand and grow the community. To help kickstart this process, we are excited to announce an initial set of &lt;a href=&quot;/presentation-materials/&quot;&gt;Apache Beam presentation materials&lt;/a&gt; which anyone can use to give a presentation about Apache Beam.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;As a community, we want to build a shared collection of high quality presentation materials. This initial set includes the following slide decks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Apache Beam model
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://goo.gl/r0nvWh&quot;&gt;Long version&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://goo.gl/h5D1yR&quot;&gt;Short version&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using Apache Beam with runners
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://goo.gl/2ay8mi&quot;&gt;Google Cloud Dataflow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As Apache Beam grows, so will this repository of presentation materials. We are excited to add new materials as the Apache Beam ecosystem grows with new runners, SDKs, and so on. If you are interested in contributing content or have a request, please see the &lt;a href=&quot;/presentation-materials/&quot;&gt;Apache Beam presentation materials&lt;/a&gt; page or email the &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#064;&amp;#098;&amp;#101;&amp;#097;&amp;#109;&amp;#046;&amp;#105;&amp;#110;&amp;#099;&amp;#117;&amp;#098;&amp;#097;&amp;#116;&amp;#111;&amp;#114;&amp;#046;&amp;#097;&amp;#112;&amp;#097;&amp;#099;&amp;#104;&amp;#101;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user@beam.incubator.apache.org&lt;/code&gt;&lt;/a&gt; mailing list with your ideas or questions.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Apr 2016 20:00:00 +0200</pubDate>
        <link>http://beam.incubator.apache.org/beam/capability/2016/04/03/presentation-materials.html</link>
        <guid isPermaLink="true">http://beam.incubator.apache.org/beam/capability/2016/04/03/presentation-materials.html</guid>
        
        
        <category>beam</category>
        
        <category>capability</category>
        
      </item>
    
      <item>
        <title>Clarifying &amp; Formalizing Runner Capabilities</title>
        <description>&lt;p&gt;With initial code drops complete (&lt;a href=&quot;https://github.com/apache/incubator-beam/pull/1&quot;&gt;Dataflow SDK and Runner&lt;/a&gt;, &lt;a href=&quot;https://github.com/apache/incubator-beam/pull/12&quot;&gt;Flink Runner&lt;/a&gt;, &lt;a href=&quot;https://github.com/apache/incubator-beam/pull/42&quot;&gt;Spark Runner&lt;/a&gt;) and expressed interest in runner implementations for &lt;a href=&quot;https://issues.apache.org/jira/browse/BEAM-9&quot;&gt;Storm&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/BEAM-19&quot;&gt;Hadoop&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/BEAM-79&quot;&gt;Gearpump&lt;/a&gt; (amongst others), we wanted to start addressing a big question in the Apache Beam (incubating) community: what capabilities will each runner be able to support?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;While we’d love to have a world where all runners support the full suite of semantics included in the Beam Model (formerly referred to as the &lt;a href=&quot;http://www.vldb.org/pvldb/vol8/p1792-Akidau.pdf&quot;&gt;Dataflow Model&lt;/a&gt;), practically speaking, there will always be certain features that some runners can’t provide. For example, a Hadoop-based runner would be inherently batch-based and may be unable to (easily) implement support for unbounded collections. However, that doesn’t prevent it from being extremely useful for a large set of uses. In other cases, the implementations provided by one runner may have slightly different semantics that those provided by another (e.g. even though the current suite of runners all support exactly-once delivery guarantees, an &lt;a href=&quot;http://samza.apache.org/&quot;&gt;Apache Samza&lt;/a&gt; runner, which would be a welcome addition, would currently only support at-least-once).&lt;/p&gt;

&lt;p&gt;To help clarify things, we’ve been working on enumerating the key features of the Beam model in a &lt;a href=&quot;/capability-matrix/&quot;&gt;capability matrix&lt;/a&gt; for all existing runners, categorized around the four key questions addressed by the model: &lt;span class=&quot;wwwh-what-dark&quot;&gt;What&lt;/span&gt; / &lt;span class=&quot;wwwh-where-dark&quot;&gt;Where&lt;/span&gt; / &lt;span class=&quot;wwwh-when-dark&quot;&gt;When&lt;/span&gt; / &lt;span class=&quot;wwwh-how-dark&quot;&gt;How&lt;/span&gt; (if you’re not familiar with those questions, you might want to read through &lt;a href=&quot;http://oreilly.com/ideas/the-world-beyond-batch-streaming-102&quot;&gt;Streaming 102&lt;/a&gt; for an overview). This table will be maintained over time as the model evolves, our understanding grows, and runners are created or features added.&lt;/p&gt;

&lt;p&gt;Included below is a summary snapshot of our current understanding of the capabilities of the existing runners (see the &lt;a href=&quot;/capability-matrix/&quot;&gt;live version&lt;/a&gt; for full details, descriptions, and Jira links); since integration is still under way, the system as whole isn’t yet in a completely stable, usable state. But that should be changing in the near future, and we’ll be updating loud and clear on this blog when the first supported Beam 1.0 release happens.&lt;/p&gt;

&lt;p&gt;In the meantime, these tables should help clarify where we expect to be in the very near term, and help guide expectations about what existing runners are capable of, and what features runner implementers will be tackling next.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  function ToggleTables(showDetails, anchor) {
    document.getElementById(&quot;cap-summary&quot;).style.display = showDetails ? &quot;none&quot; : &quot;block&quot;;
    document.getElementById(&quot;cap-full&quot;).style.display = showDetails ? &quot;block&quot; : &quot;none&quot;;
    location.hash = anchor;
  }
&lt;/script&gt;

&lt;!-- Summary table --&gt;

&lt;div id=&quot;cap-blog&quot; style=&quot;display:block&quot;&gt;
&lt;table class=&quot;cap-summary&quot;&gt;
  
  &lt;tr class=&quot;cap-summary&quot; id=&quot;cap-blog-what&quot;&gt;
    &lt;th class=&quot;cap-summary color-metadata format-category&quot; colspan=&quot;5&quot; style=&quot;color:#ca1&quot;&gt;What is being computed?&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability&quot;&gt;&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#ec3&quot;&gt;Beam Model&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#ec3&quot;&gt;Google Cloud Dataflow&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#ec3&quot;&gt;Apache Flink&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#ec3&quot;&gt;Apache Spark&lt;/th&gt;
  
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;ParDo&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;GroupByKey&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;Flatten&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;Combine&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;Composite Transforms&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;Side Inputs&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;Source API&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ec3;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;Aggregators&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#fe5;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#ec3&quot;&gt;Keyed State&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#ca1&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;td class=&quot;cap-summary color-blank cap-blank&quot; colspan=&quot;5&quot;&gt;&lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot; id=&quot;cap-blog-where&quot;&gt;
    &lt;th class=&quot;cap-summary color-metadata format-category&quot; colspan=&quot;5&quot; style=&quot;color:#37d&quot;&gt;Where in event time?&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability&quot;&gt;&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#59f&quot;&gt;Beam Model&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#59f&quot;&gt;Google Cloud Dataflow&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#59f&quot;&gt;Apache Flink&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#59f&quot;&gt;Apache Spark&lt;/th&gt;
  
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#59f&quot;&gt;Global windows&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#59f&quot;&gt;Fixed windows&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8cf;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;~&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#59f&quot;&gt;Sliding windows&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#59f&quot;&gt;Session windows&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#59f&quot;&gt;Custom windows&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#59f&quot;&gt;Custom merging windows&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#59f&quot;&gt;Timestamp control&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#59f;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#37d&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;td class=&quot;cap-summary color-blank cap-blank&quot; colspan=&quot;5&quot;&gt;&lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot; id=&quot;cap-blog-when&quot;&gt;
    &lt;th class=&quot;cap-summary color-metadata format-category&quot; colspan=&quot;5&quot; style=&quot;color:#6a4&quot;&gt;When in processing time?&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability&quot;&gt;&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#8c6&quot;&gt;Beam Model&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#8c6&quot;&gt;Google Cloud Dataflow&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#8c6&quot;&gt;Apache Flink&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#8c6&quot;&gt;Apache Spark&lt;/th&gt;
  
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;Configurable triggering&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;Event-time triggers&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;Processing-time triggers&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;Count triggers&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;[Meta]data driven triggers&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;Composite triggers&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;Allowed lateness&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#8c6;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#8c6&quot;&gt;Timers&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#6a4&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;td class=&quot;cap-summary color-blank cap-blank&quot; colspan=&quot;5&quot;&gt;&lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot; id=&quot;cap-blog-how&quot;&gt;
    &lt;th class=&quot;cap-summary color-metadata format-category&quot; colspan=&quot;5&quot; style=&quot;color:#b55&quot;&gt;How do refinements relate?&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability&quot;&gt;&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#d77&quot;&gt;Beam Model&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#d77&quot;&gt;Google Cloud Dataflow&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#d77&quot;&gt;Apache Flink&lt;/th&gt;
  
    &lt;th class=&quot;cap-summary color-platform format-platform&quot; style=&quot;color:#d77&quot;&gt;Apache Spark&lt;/th&gt;
  
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#d77&quot;&gt;Discarding&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#d77;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#d77;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#d77;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#d77;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#d77&quot;&gt;Accumulating&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#d77;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#d77;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#d77;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2713;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;th class=&quot;cap-summary color-capability format-capability&quot; style=&quot;color:#d77&quot;&gt;Accumulating &amp;amp; Retracting&lt;/th&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
    

    &lt;td width=&quot;25%&quot; class=&quot;cap-summary&quot; style=&quot;background-color:#ddd;border-color:#b55&quot;&gt;&lt;b&gt;&lt;center&gt;&amp;#x2715;&lt;/center&gt;&lt;/b&gt;
&lt;/td&gt;
    
  &lt;/tr&gt;
  
  &lt;tr class=&quot;cap-summary&quot;&gt;
    &lt;td class=&quot;cap-summary color-blank cap-blank&quot; colspan=&quot;5&quot;&gt;&lt;/td&gt;
  &lt;/tr&gt;
  
&lt;/table&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 17 Mar 2016 19:00:00 +0100</pubDate>
        <link>http://beam.incubator.apache.org/beam/capability/2016/03/17/capability-matrix.html</link>
        <guid isPermaLink="true">http://beam.incubator.apache.org/beam/capability/2016/03/17/capability-matrix.html</guid>
        
        
        <category>beam</category>
        
        <category>capability</category>
        
      </item>
    
      <item>
        <title>Dataflow Python SDK is now public!</title>
        <description>&lt;p&gt;When the Apache Beam project proposed entry into the &lt;a href=&quot;http://wiki.apache.org/incubator/BeamProposal&quot;&gt;Apache Incubator&lt;/a&gt; the proposal
included the &lt;a href=&quot;https://github.com/GoogleCloudPlatform/DataflowJavaSDK&quot;&gt;Dataflow Java SDK&lt;/a&gt;. In the long term, however, Apache Beam aims to support SDKs implemented in multiple languages, such as Python.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Today, Google submitted the &lt;a href=&quot;http://github.com/GoogleCloudPlatform/DataflowPythonSDK&quot;&gt;Dataflow Python (2.x) SDK&lt;/a&gt; on GitHub. Google is committed to including the in progress python SDK in Apache Beam and, in that spirit, we’ve moved development of the Python SDK to a public repository. While this SDK will not be included with the initial (incubating) releases of Apache Beam, our we plan on incorporating the Python SDK into beam during incubation. We want to take the time to implement changes from the &lt;a href=&quot;https://goo.gl/nk5OM0&quot;&gt;technical vision&lt;/a&gt; into the Java SDK before we introduce a Python SDK for Apache Beam. We believe this will allow us to work on the model and SDKs in an ordered fashion.&lt;/p&gt;

&lt;p&gt;You can look for the Apache Beam Python SDK in the coming months once we finish forking and refactoring the Java SDK.&lt;/p&gt;

&lt;p&gt;Best,&lt;/p&gt;

&lt;p&gt;Apache Beam Team&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Feb 2016 22:00:00 +0100</pubDate>
        <link>http://beam.incubator.apache.org/beam/python/sdk/2016/02/25/python-sdk-now-public.html</link>
        <guid isPermaLink="true">http://beam.incubator.apache.org/beam/python/sdk/2016/02/25/python-sdk-now-public.html</guid>
        
        
        <category>beam</category>
        
        <category>python</category>
        
        <category>sdk</category>
        
      </item>
    
      <item>
        <title>Apache Beam has a logo!</title>
        <description>&lt;p&gt;One of the major benefits of Apache Beam is the fact that it unifies both
both batch and stream processing into one powerful model. In fact, this unification
is so important, the name Beam itself comes from the union of &lt;strong&gt;B&lt;/strong&gt;atch + str&lt;strong&gt;EAM&lt;/strong&gt; = Beam&lt;/p&gt;

&lt;p&gt;When the project started, we wanted a logo which was both appealing and visually
represented this unification. &lt;!--more--&gt; Thanks to the &lt;strong&gt;amazing&lt;/strong&gt; work of Stephanie Smythies, the Apache Beam project
now has a logo.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;drum roll&lt;/em&gt; - &lt;strong&gt;Presenting, the Apache Beam Logo!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/beam_logo_s.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are excited about this logo because it is &lt;strong&gt;simple&lt;/strong&gt;, &lt;strong&gt;bright&lt;/strong&gt;, and shows the
unification of bath and streaming, as beams of light, within the ‘B’. We will base
our future website and documentation design around this logo and its coloring. We
will also make various permutations and resolutions of this logo available in the
coming weeks. For any questions or comments, send an email to the &lt;code class=&quot;highlighter-rouge&quot;&gt;dev@&lt;/code&gt; email list
for Apache Beam.&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Feb 2016 19:21:48 +0100</pubDate>
        <link>http://beam.incubator.apache.org/beam/update/website/2016/02/22/beam-has-a-logo.html</link>
        <guid isPermaLink="true">http://beam.incubator.apache.org/beam/update/website/2016/02/22/beam-has-a-logo.html</guid>
        
        
        <category>beam</category>
        
        <category>update</category>
        
        <category>website</category>
        
      </item>
    
  </channel>
</rss>
